// Maps a tool kind to a set of abilities
// A set of abilities is a primary, a secondary, and a vec of all extra abilities
({
    Sword: (
        primary: "common.abilities.sword.triplestrike",
        secondary: "common.abilities.sword.dash",
        skills: [
            "common.abilities.sword.spin",
        ],
    ),
    Axe: (
        primary: "common.abilities.axe.doublestrike",
        secondary: "common.abilities.axe.spin",
        skills: [
            "common.abilities.axe.leap",
        ],
    ),
    Hammer: (
        primary: "common.abilities.hammer.singlestrike",
        secondary: "common.abilities.hammer.charged",
        skills: [
            "common.abilities.hammer.leap",
        ],
    ),
    Bow: (
        primary: "common.abilities.bow.basic",
        secondary: "common.abilities.bow.charged",
        skills: [
            "common.abilities.bow.repeater",
        ],
    ),
    Staff: (
        primary: "common.abilities.staff.firebomb",
        secondary: "common.abilities.staff.flamethrower",
        skills: [
            "common.abilities.staff.fireshockwave",
        ],
    ),
    Sceptre: (
        primary: "common.abilities.sceptre.healingbeam",
        secondary: "common.abilities.sceptre.healingbomb",
        skills: [],
    ),
    Dagger: (
        primary: "common.abilities.dagger.tempbasic",
        secondary: "common.abilities.dagger.tempbasic",
        skills: [],
    ),
    Shield: (
        primary: "common.abilities.shield.tempbasic",
        secondary: "common.abilities.shield.block",
        skills: [],
    ),
    Unique(StoneGolemFist): (
        primary: "common.abilities.unique.stonegolemfist.basic",
        secondary: "common.abilities.unique.stonegolemfist.shockwave",
        skills: [],
    ),
    Unique(BeastClaws): (
        primary: "common.abilities.unique.beastclaws.basic",
        secondary: "common.abilities.unique.beastclaws.basic",
        skills: [],
    ),
    Unique(QuadMedQuick): (
        primary: "common.abilities.unique.quadmedquick.basic",
        secondary: "common.abilities.unique.quadmedquick.dash",
        skills: [],
    ),
    Unique(QuadMedJump): (
        primary: "common.abilities.unique.quadmedjump.leap",
        secondary: "common.abilities.unique.quadmedjump.leap",
        skills: [],
    ),
    Unique(QuadMedBasic): (
        primary: "common.abilities.unique.quadmedbasic.triplestrike",
        secondary: "common.abilities.unique.quadmedbasic.triplestrike",
        skills: [],
    ),
    Unique(QuadLowRanged): (
        primary: "common.abilities.unique.quadlowranged.basic",
        secondary: "common.abilities.unique.quadlowranged.firebomb",
        skills: [],
    ),
    Unique(QuadLowTail): (
        primary: "common.abilities.unique.quadlowtail.charged",
        secondary: "common.abilities.unique.quadlowtail.triplestrike",
        skills: [],
    ),
    Unique(QuadLowQuick): (
        primary: "common.abilities.unique.quadlowquick.dash",
        secondary: "common.abilities.unique.quadlowquick.quadstrike",
        skills: [],
    ),
    Unique(QuadLowBasic): (
        primary: "common.abilities.unique.quadlowbasic.triplestrike",
        secondary: "common.abilities.unique.quadlowbasic.basic",
        skills: [],
    ),
    Debug: (
        primary: "common.abilities.debug.forwardboost",
        secondary: "common.abilities.debug.upboost",
        skills: [
            "common.abilities.debug.possess",
        ],
    ),
    Farming: (
        primary: "common.abilities.farming.basic",
        secondary: "common.abilities.farming.basic",
        skills: [],
    ),
    Empty: (
        primary: "common.abilities.empty.basic",
        secondary: "common.abilities.empty.basic",
        skills: [],
    ),
})